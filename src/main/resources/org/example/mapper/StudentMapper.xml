<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.StudentMapper">

    <insert id="addStudent">
        INSERT INTO student(name,no,gender,phone,id_card,is_college,address,degree,graduation_date,clazz_id,violation_count,violation_score,create_time,update_time)
        VALUES (#{name},#{no},#{gender},#{phone},#{idCard},#{isCollege},#{address},#{degree},#{graduationDate},#{clazzId},0,0,#{createTime},#{updateTime})
    </insert>
<!--    更新学生信息-->
    <update id="updateStudent">
        UPDATE student
        <set>
            update_time = #{updateTime},
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="idCard != null and idCard != ''">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null and address != ''">address = #{address},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="violationCount != null">violation_count = #{violationCount},</if>
            <if test="violationScore != null">violation_score = #{violationScore},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
        </set>
        WHERE id = #{id}
    </update>
    <update id="updateViolation">
        UPDATE student
        SET violation_count = violation_count + 1,
            violation_score = violation_score + #{score},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="delStudentByIds">
        DELETE FROM student
        WHERE id IN
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="page" resultType="org.example.pojo.Student">
        SELECT
            s.*,
            c.name AS clazzName
        FROM student s
        LEFT JOIN clazz c ON s.clazz_id = c.id
        <where>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="degree != null">
                AND s.degree = #{degree}
            </if>
            <if test="clazzId != null">
                AND s.clazz_id = #{clazzId}
            </if>
        </where>order by s.update_time desc
    </select>
    <select id="findStudentById" resultType="org.example.pojo.Student">
        select * from student where  id=#{id}
    </select>
    <select id="countStudentCountData" resultType="java.util.Map">
        select
            c.name as name,
            count(*) as num
        from student s left join clazz c on s.clazz_id = c.id
        group by clazz_id;
    </select>
    <select id="countStudentDegreeData" resultType="java.util.Map">
        select
            (case
                 when degree = 1 then '初中'
                 when degree = 2 then '高中'
                 when degree = 3 then '大专'
                 when degree = 4 then '本科'
                 when degree = 5 then '硕士'
                 else '博士' end) name,
            count(*) value
        from student
        group by degree;

    </select>

</mapper>